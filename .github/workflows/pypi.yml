name: Test, Build Docs, and Publish to PyPI

on:
  push:  # Trigger on every push
    branches:
      - "**"  # Trigger on all branches

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
          pip install pytest

      # Step 4: Run test cases
      - name: Run tests
        run: pytest tests/

  deploy-docs:
    runs-on: ubuntu-latest
    needs: run-tests  # Run this job after tests pass

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Install MkDocs and dependencies
      - name: Install MkDocs
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material

      # Step 4: Deploy documentation to GitHub Pages
      - name: Deploy Docs
        run: mkdocs gh-deploy --force

  build-and-publish:
    runs-on: ubuntu-latest
    needs: run-tests  # Run this job after tests pass
    if: startsWith(github.ref, 'refs/tags/')  # Only run on tag pushes

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  

      # Step 3: Install build dependencies
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      # Step 4: Build the distribution
      - name: Build the package
        run: python setup.py sdist

      # Step 5: Publish to PyPI
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*